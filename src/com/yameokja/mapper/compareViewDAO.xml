<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yameokja.mc.IcompareViewDAO">
	<!-- 가게 -->
	<!-- 가게이름, 좋아요수, 평점, 리뷰수, 주소, 전화번호, 가게 이메일, 가게 설명, 최대인원수, 가게음식카테고리, 폐업여부 -->
	<select id="store" resultType="com.yameokja.mc.StoreDetailDTO">
		<!-- SELECT ST_NUM, ST_NAME, ST_LOCATION, ST_TEL, ST_EXPLAIN, MAX_CUSTOMERS
		, ST_EMAIL, FOOD_NAME, PHOTO_LINK, STAR_AVG, RV_COUNT, USER_NUM, ISOUT
		FROM
		STORE_VIEW
		WHERE ST_NUM IN (
		<foreach collection="list" item="st_num" separator=",">
			#{st_num}
		</foreach>
		) -->
		
		SELECT SV.ST_NUM AS ST_NUM, SV.ST_NAME AS ST_NAME, SV.ST_LOCATION AS ST_LOCATION, SV.ST_TEL AS ST_TEL, SV.ST_EXPLAIN AS ST_EXPLAIN, SV.MAX_CUSTOMERS AS MAX_CUSTOMERS
		        , SV.ST_EMAIL AS ST_EMAIL, SV.FOOD_NAME AS FOOD_NAME, SV.PHOTO_LINK AS PHOTO_LINK, SV.STAR_AVG AS STAR_AVG, SV.RV_COUNT AS RV_COUNT, SV.USER_NUM AS USER_NAME, 
		        CASE WHEN OP.OUT_PROCESS_NUM IN (SELECT OUT_PROCESS_NUM FROM OUT_REJ) THEN '운영'
		               WHEN OP.OUT_PROCESS_NUM IS NOT NULL THEN '폐업'
		               ELSE '운영' END AS ISOUT
		FROM STORE_VIEW SV JOIN IN_PROCESS IP
		  ON SV.IN_PROCESS_NUM = IP.IN_PROCESS_NUM
		LEFT JOIN IN_APPLY IA
		ON IP.IN_APPLY_NUM = IA.IN_APPLY_NUM
		LEFT JOIN OUT_APPLY OA
		ON IP.IN_PROCESS_NUM = OA.IN_PROCESS_NUM
		LEFT JOIN OUT_PROCESS OP
		ON OA.OUT_APPLY_NUM = OP.OUT_APPLY_NUM
	</select>

	<!-- 영업시간 가지고 오는 쿼리문 : 요일, 시작시간, 끝시간, 휴무여부 -->
	<select id="openClose"
		resultType="com.yameokja.mc.StoreOpencloseDTO">
		SELECT W.DAY_NUM AS DAY_NUM, W.DAY_NAME AS DAY_NAME, S.ST_NUM AS
		ST_NUM, O.START_TIME||' ~ '||O.END_TIME AS OPERATE_TIME
		,
		NVL2(H.HOLIDAY_NUM,'휴무', '-') AS HOLIDAY
		FROM WEEKDAY_LABEL W
		CROSS
		JOIN
		(
		SELECT DISTINCT ST_NUM FROM ST_OPENCLOSE
		) S
		LEFT JOIN ST_OPENCLOSE O
		ON
		W.DAY_NUM = O.DAY_NUM AND S.ST_NUM = O.ST_NUM
		LEFT JOIN ST_HOLIDAY H
		ON
		W.DAY_NUM = H.DAY_NUM AND S.ST_NUM = H.ST_NUM
		WHERE S.ST_NUM IN (
		<foreach collection="list" item="st_num" separator=",">
			#{st_num}
		</foreach>
		)
		ORDER BY S.ST_NUM, W.DAY_NUM
	</select>

	<!-- 체크박스 -->
	<!-- <select id="stcheck" resultType="com.yameokja.mc.StoreCheckDTO"> SELECT 
		CL2.CHBOX_NUM AS CHBOX_NUM , CL2.CHBOX_NAME AS CHBOX_NAME , CASE T.YN_NUM 
		WHEN 1 THEN '○' WHEN 2 THEN 'Ⅹ' ELSE '-' END AS YESORNO , T.ST_NUM AS ST_NUM 
		FROM ( SELECT CL.CHBOX_NUM AS CHBOX_NUM, CL.CHBOX_NAME AS CHBOX_NAME, SC.YN_NUM 
		AS YN_NUM, SC.ST_NUM AS ST_NUM FROM CHBOX_LABEL CL LEFT JOIN ST_CHBOX SC 
		ON CL.CHBOX_NUM = SC.CHBOX_NUM WHERE ST_NUM IN ( <foreach collection="list" 
		item="st_num" separator=","> #{st_num} </foreach> ) ) T RIGHT JOIN CHBOX_LABEL 
		CL2 ON CL2.CHBOX_NUM = T.CHBOX_NUM ORDER BY CL2.CHBOX_NUM </select> -->

	<!-- 메뉴 및 가격 가져오기 -->
	<select id="menuList" resultType="com.yameokja.mc.StoreMenuDTO">
		SELECT ST_NUM, MENU_NUM, MENU_NAME, PRICE, IMAGE_LINK
		FROM MENU
		WHERE
		ST_NUM = #{st_num}
        <![CDATA[AND ROWNUM<=1]]>
	</select>

	<!-- 메뉴 평균 가져오기 -->
	<select id="menuAvg" resultType="com.yameokja.mc.StoreMenuDTO">
		SELECT ST_NUM, ROUND(AVG(PRICE),0) AS PRICE_AVG
		FROM MENU
		WHERE ST_NUM
		IN (
		<foreach collection="list" item="st_num" separator=",">
			#{st_num}
		</foreach>
		)
		GROUP BY ST_NUM
	</select>

	<!-- 체크박스 -->
	<select id="comStcheck" resultType="com.yameokja.mc.StoreCheckDTO">
		SELECT CL2.CHBOX_NUM AS CHBOX_NUM
			 , CL2.CHBOX_NAME AS CHBOX_NAME
			 , CASE T.YN_NUM WHEN 1 THEN '○'
		WHEN 2 THEN 'Ⅹ'
		ELSE '-'
		END AS YESORNO
		, #{st_num} AS ST_NUM
		FROM
		(
		SELECT CL.CHBOX_NUM AS CHBOX_NUM,
		CL.CHBOX_NAME AS CHBOX_NAME, SC.YN_NUM AS YN_NUM, SC.ST_NUM AS ST_NUM
		FROM CHBOX_LABEL CL LEFT JOIN ST_CHBOX SC
		ON CL.CHBOX_NUM = SC.CHBOX_NUM
		WHERE ST_NUM = #{st_num, jdbcType=INTEGER}
		) T
		RIGHT JOIN CHBOX_LABEL CL2
		ON
		CL2.CHBOX_NUM = T.CHBOX_NUM
		ORDER BY CL2.CHBOX_NUM
	</select>



	<!-- 메뉴 및 가격, 평균 가져오기 -->
	<!-- <select id="menuLists" resultType="com.yameokja.mc.StoreMenuDTO"> SELECT 
		(SELECT NVL(ROUND(AVG(MENU.PRICE), 0), 0) FROM MENU INNER JOIN ST_LIST SL 
		ON SL.ST_NUM = MENU.ST_NUM WHERE SL.ST_NUM = #{st_num}) AS PRICE_AVG, sub.MENU_NAME 
		AS MENU_NAME, sub.PRICE AS PRICE, sub.IMAGE_LINK AS IMAGE_LINK sub.ST_NUM 
		AS ST_NUM FROM (SELECT SL.ST_NUM, MENU_NUM, MENU_NAME, PRICE, IMAGE_LINK 
		FROM MENU INNER JOIN ST_LIST SL ON SL.ST_NUM = MENU.ST_NUM WHERE SL.ST_NUM 
		IN ( <foreach collection="list" item="st_num" separator=","> #{st_num} </foreach> 
		) ORDER BY MENU_NUM ASC) sub WHERE <![CDATA[ ROWNUM <= 1 ]]> </select> -->
		
	<!-- 비교했던 테이블에 있는지 확인 -->
	<select id="comparedIsNull" resultType="java.lang.Integer">
		SELECT COMPARED_NUM
		FROM COMPARED_BOX
		WHERE USER_NUM = #{user_num}
		  AND ST_NUM = #{st_num}
	</select>
	
	<!-- 비교했던 테이블에 있으면 sysdate로 갱신 -->
	<update id="comparedUpdate">
		UPDATE COMPARED_BOX
		SET REG_DATE = TO_DATE(SYSDATE, 'YY/MM/DD')
		WHERE USER_NUM = #{user_num}
		  AND ST_NUM = #{st_num}
	</update>

	<!-- 비교했던 테이블에 insert -->
	<insert id="comparedInsert">
		INSERT INTO COMPARED_BOX(COMPARED_NUM, USER_NUM, ST_NUM, REG_DATE)
		VALUES(COMPAREDSEQ.nextval, #{user_num}, #{st_num}, DEFAULT)
	</insert>

</mapper>